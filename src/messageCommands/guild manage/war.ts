import { MessageActionRow, MessageButton } from "discord.js";
import ms from "ms";
import { UNION_DECLINED_COOLDOWN } from "../../config";
import { fetchGuild, getMemberGuild } from "../../database/db";
import { guilds, GuildSchema } from "../../database/models/guildSchema";
import { DateTime } from "../../structures/DateAndTime";
import { Embed } from "../../structures/Embed";
import { MessageCommand } from "../../structures/MessageCommand";

export default new MessageCommand({
    name: "war",
    category: 1,
    cooldown: 3,
    description: "–æ–±—ä—è–≤–∏—Ç—å –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –≤–æ–π–Ω—É",
    params: ["new", "cancel"],
    examples: ["{prefix}war new –ú–∞—Ä—Å", "{prefix}war cancel –ú–∞—Ä—Å"],
    async run({ client, msg, methods, args }) {
        const id = msg.author.id;
        const guild = await getMemberGuild(id) as GuildSchema;

        if (!guild) return Embed(msg).setError("–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –≥–∏–ª—å–¥–∏–∏.").send();

        if (guild.leader !== id) return Embed(msg).setError("–í—ã –Ω–µ –ª–∏–¥–µ—Ä —ç—Ç–æ–π –≥–∏–ª—å–¥–∏–∏!").send();

        const type = args.shift();
        const name = args.join(" ");
        if (!["new", "cancel"].includes(type)) return methods.createError(msg, `–£–∫–∞–∂–∏—Ç–µ \`new\`, —á—Ç–æ–±—ã –æ–±—ä—è–≤–∏—Ç—å –≥–∏–ª—å–¥–∏—é –≤–æ–π–Ω—É, –ª–∏–±–æ \`cancel\`, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ—Ç–º–µ–Ω–∏—Ç—å –≤–æ–π–Ω—É!`).send();

        const specGuild = (await fetchGuild(name))?.Guild;
        if (!specGuild) return Embed(msg).setError("–ì–∏–ª—å–¥–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!").send();
        if (specGuild.id === guild.id) return Embed(msg).setError("–£–∫–∞–∂–∏—Ç–µ –¥—Ä—É–≥—É—é –≥–∏–ª—å–¥–∏—é!").send();
        const myUnion = guild.union || [];
        const mUnion = specGuild.union || [];
        const myWar = guild.war || [];
        const mWar = specGuild.war || [];
        // if (myWar.includes(guild.id)) return Embed(msg).setError("–≠—Ç–∞ –≥–∏–ª—å–¥–∏—è —Å –≤–∞–º–∏ —É–∂–µ –≤–æ—é–µ—Ç , –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ!").send();

        if (type === "cancel") {

            if (!myWar.includes(specGuild.id)) return Embed(msg).setError("–í—ã –Ω–µ –≤–æ—é–µ—Ç–µ —Å —ç—Ç–æ–π –≥–∏–ª—å–¥–∏–∏!").send();

            const message = await Embed(msg).setTitle("üè≥ | –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–∏—Ç—å –≤–æ–π–Ω—É!").setText(`**${msg.guild.members.cache.get(specGuild.leader)?.user?.username || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"}**, –ì–∏–ª—å–¥–∏—è **${guild.name}** –ø—Ä–æ—Å–∏—Ç –≤–∞–º –∑–∞–∫–æ–Ω—á–∏—Ç—å –≤–æ–π–Ω—É.\n\n–í—ã —Å–æ–≥–ª–∞—Å–Ω—ã?`).send(null, { components: [submitRow()] });
            const collector = message.createMessageComponentCollector({
                filter: i => i.user.id === specGuild.leader,
                time: 45 * 1000
            })

            let clicked = false;
            collector.on("end", () => {
                if (!clicked) {
                    message.edit({ components: [submitRow(true)], embeds: [Embed(msg).setTitle("üè≥ | –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–∏—Ç—å –≤–æ–π–Ω—É!").setText(`**${msg.guild.members.cache.get(specGuild.leader)?.user?.username || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"}** –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª..\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!`)] })
                }
            })

            collector.on("collect", async (b): Promise<any> => {
                await b.deferUpdate();

                clicked = true;
                collector.stop();
                if (b.customId === "said-yes") {
                    const myList = client.util.remove(myWar, { elements: [specGuild.id], indexes: [] });
                    const mList = client.util.remove(mWar, { elements: [guild.id], indexes: [] });

                    await Promise.all([
                        guilds.updateOne({ id: guild.id }, { $set: { war: myList } }),
                        guilds.updateOne({ id: specGuild.id }, { $set: { war: mList } })
                    ]);


                    message.edit({ components: [submitRow(true)], embeds: [Embed(msg).setSuccess(`–£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –≤–æ–π–Ω–∞ –º–µ–∂–¥—É –≥–∏–ª—å–¥–∏—è–º–∏ **${guild.name}** –∏ **${specGuild.name}**!`).setTitle("üè≥ | –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–æ–π–Ω—ã!")] });
                } else {
                    message.edit({ components: [submitRow(true)], embeds: [Embed(msg).setError(`–õ–∏–¥–µ—Ä –≥–∏–ª—å–¥–∏–∏ **${specGuild.name}** –æ—Ç–∫–∞–∑–∞–ª—Å—è –∑–∞–∫–æ–Ω—á–∏—Ç—å –≤–æ–π–Ω—É!`).setTitle("üè≥ | –û—Ç–∫–ª–æ–Ω–µ–Ω–æ")] });
                }
            })
        } else {
            if (myWar.includes(specGuild.id)) return Embed(msg).setError("–í—ã —É–∂–µ –≤–æ—é–µ—Ç–µ —Å —ç—Ç–æ–π –≥–∏–ª—å–¥–∏–∏!").send();
            if (myUnion.includes(specGuild.id)) return Embed(msg).setError("–≠—Ç–∞ –≥–∏–ª—å–¥–∏—è –≤–∞—à —Å–æ—é–∑–Ω–∏–∫–∞, –Ω–µ–ª—å–∑—è –Ω–∞—á–∏–Ω–∞—Ç—å –≤–æ–π–Ω—É!").send();
            if (!guild.war) await guilds.updateOne({ id: guild.id }, { $set: { war: [] } });
            if (!specGuild.war) await guilds.updateOne({ id: specGuild.id }, { $set: { war: [] } });
            await Promise.all([
                guilds.updateOne({ id: guild.id }, { $push: { war: specGuild.id } }),
                guilds.updateOne({ id: specGuild.id }, { $push: { war: guild.id } })
            ]);

            Embed(msg).setTitle(`‚ùó | –ù–æ–≤–∞—è –≤–æ–π–Ω–∞`).setText(`**${guild.name}** –æ–±—ä—è–≤–∏–ª–∞ –≤–æ–π–Ω—É –≥–∏–ª—å–¥–∏—é **${specGuild.name}**`).send();
        }

    }
})

export function submitRow(disable?: boolean): MessageActionRow {
    const buttons = [
        new MessageButton()
            .setDisabled(disable ? true : false)
            .setCustomId("said-yes")
            .setLabel("–î–∞")
            .setStyle("SUCCESS"),
        new MessageButton()
            .setDisabled(disable ? true : false)
            .setCustomId("said-no")
            .setLabel("–ù–µ—Ç")
            .setStyle("DANGER")
    ]


    return new MessageActionRow().addComponents(buttons);
}
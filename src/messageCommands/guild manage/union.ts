import { MessageActionRow, MessageButton } from "discord.js";
import ms from "ms";
import { UNION_DECLINED_COOLDOWN } from "../../config";
import { fetchGuild, getMemberGuild } from "../../database/db";
import { guilds, GuildSchema } from "../../database/models/guildSchema";
import { DateTime } from "../../structures/DateAndTime";
import { Embed } from "../../structures/Embed";
import { MessageCommand } from "../../structures/MessageCommand";
type GuildId = string;
const UnionCooldowns = new Set<GuildId>()

export default new MessageCommand ({
    name: "union",
    category: 1,
    cooldown: 3,
    description: "–ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å/—Ä–∞–∑–±–∏—Ç—å —Å–æ—é–∑",
    params: ["new", "cancel"],
    examples: ["{prefix}union new –ú–∞—Ä—Å", "{prefix}union cancel –ú–∞—Ä—Å"],
    async run ({client, msg, methods, args}) {
        const id = msg.author.id;
        const guild = await getMemberGuild(id) as GuildSchema;

        if (!guild) return Embed(msg).setError("–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –≥–∏–ª—å–¥–∏–∏.").send();

        if (guild.leader !== id) return Embed(msg).setError("–í—ã –Ω–µ –ª–∏–¥–µ—Ä —ç—Ç–æ–π –≥–∏–ª—å–¥–∏–∏!").send();

        const type = args.shift();
        const name = args.join(" ");
        if (!["new", "cancel"].includes(type)) return methods.createError(msg, `–£–∫–∞–∂–∏—Ç–µ \`new\`, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≥–∏–ª—å–¥–∏—é —Å–æ—é–∑, –ª–∏–±–æ \`cancel\`, —á—Ç–æ–±—ã —Ä–∞—Å—Ç–æ—Ä–≥–Ω—É—Ç—å —Å–æ—é–∑!`).send();

        const specGuild = (await fetchGuild(name))?.Guild;
        if (!specGuild) return Embed(msg).setError("–ì–∏–ª—å–¥–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!").send();
        if (specGuild.id === guild.id) return Embed(msg).setError("–£–∫–∞–∂–∏—Ç–µ –¥—Ä—É–≥—É—é –≥–∏–ª—å–¥–∏—é!").send();
        const myUnion = guild.union || [];
        const mUnion = specGuild.union || [];
        const myWar = guild.war || [];
        const mWar = specGuild.war || [];
        if (mWar.includes(guild.id)) return Embed(msg).setError("–≠—Ç–∞ –≥–∏–ª—å–¥–∏—è –æ–±—ä—è–≤–∏–ª–∞ –≤–∞–º –≤–æ–π–Ω—É, –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ!").send();
        if (myWar.includes(specGuild.id)) return Embed(msg).setError("–í—ã –æ–±—ä—è–≤–∏–ª–∏ —ç—Ç–æ–π –≥–∏–ª—å–¥–∏–∏ –≤–æ–π–Ω—É, –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ!").send();
        
        if (type === "new") {
            // COoldown
            if (UnionCooldowns.has(guild.id)) return Embed(msg).setError("–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞, –ø—Ä–µ–∂–¥–µ —á–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤—É—é.").send();
            if (guild?.cooldowns?.union > new Date()) return Embed(msg).setError(`–í–∞–º –Ω–µ–¥–∞–≤–Ω–æ –æ—Ç–∫–∞–∑–∞–ª–∏, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â–µ ${DateTime.formatTime(DateTime.getTimeData(guild.cooldowns.union.getTime()))}`).send()
            
            if (myUnion.includes(specGuild.id)) return Embed(msg).setError("–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —Å–æ—é–∑–µ —Å —ç—Ç–æ–π –≥–∏–ª—å–¥–∏–∏!").send();

            
            UnionCooldowns.add(guild.id);
            const message = await Embed(msg).setTitle("ü§ù | –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ—é–∑–∞!").setText(`**${msg.guild.members.cache.get(specGuild.leader)?.user?.username || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"}**, –ì–∏–ª—å–¥–∏—è **${guild.name}** –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–∞–º –∑–∞–∫–ª—é—á–∏—Ç—å —Å–æ—é–∑.\n\n–°–æ–≥–ª–∞—Å–Ω—ã –≤—ã?`).send(null, {components: [submitRow()]});
            const collector = message.createMessageComponentCollector({
                filter: i => i.user.id === specGuild.leader,
                time: 45 * 1000
            })

            let clicked = false;
            collector.on("end", () => {
                UnionCooldowns.delete(guild.id);
                if (!clicked) {
                    message.edit({components: [submitRow(true)], embeds: [Embed(msg).setTitle("ü§ù | –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ—é–∑–∞!").setText(`**${msg.guild.members.cache.get(specGuild.leader)?.user?.username || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"}** –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª..\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!`)]})
                }
            })

            collector.on("collect", async (b): Promise<any> => {
                await b.deferUpdate();

                clicked = true;
                collector.stop();
                if (b.customId === "said-yes") {
                    if (!guild.union) await guilds.updateOne({id: guild.id}, {$set: {union: []}});
                    if (!specGuild.union) await guilds.updateOne({id:specGuild.id}, {$set: {union: []}});
                    await Promise.all([
                        guilds.updateOne({id: guild.id}, {$push: {union: specGuild.id}}),
                        guilds.updateOne({id: specGuild.id}, {$push: {union: guild.id}})
                    ]);
                    message.edit({components: [submitRow(true)], embeds: [Embed(msg).setSuccess(`–£—Å–ø–µ—à–Ω–æ –∑–∞–∫–ª—é—á—ë–Ω —Å–æ—é–∑ –º–µ–∂–¥—É –≥–∏–ª—å–¥–∏—è–º–∏ **${guild.name}** –∏ **${specGuild.name}**!`).setTitle("ü§ù | –ù–æ–≤—ã–π —Å–æ—é–∑!")]});
                } else {
                    await guilds.updateOne({id: guild.id}, {$set: {"cooldowns.union": new Date(Date.now() + ms(UNION_DECLINED_COOLDOWN))}});
                    message.edit({components: [submitRow(true)], embeds: [Embed(msg).setSuccess(`–õ–∏–¥–µ—Ä –≥–∏–ª—å–¥–∏–∏ **${specGuild.name}** –æ—Ç–∫–∞–∑–∞–ª—Å—è –∑–∞–∫–ª—é—á–∏—Ç—å —Å–æ—é–∑ —Å –≤–∞–º–∏!`).setTitle("ü§ù | –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ")]});
                }
            })
        } else {
            if (!myUnion.includes(specGuild.id)) return Embed(msg).setError("–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —Å–æ—é–∑–µ —Å —ç—Ç–æ–π –≥–∏–ª—å–¥–∏–∏!").send();
            const myList = client.util.remove(myUnion, {elements: [specGuild.id], indexes: []});
            const mList = client.util.remove(mUnion, {elements: [guild.id], indexes: []});

            await Promise.all([
                guilds.updateOne({id: guild.id}, {$set: {union: myList}}),
                guilds.updateOne({id: specGuild.id}, {$set: {union: mList}})
            ]);

            Embed(msg).setTitle(`‚ùó | –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—é–∑–∞`).setText("–°–æ—é–∑ —Ä–∞—Å—Ç–æ—Ä–≥–Ω—É—Ç!").send();
        }

    }
})

export function submitRow (disable?: boolean): MessageActionRow {
    const buttons = [
        new MessageButton()
            .setDisabled(disable ? true : false)
            .setCustomId("said-yes")
            .setLabel("–î–∞")
            .setStyle("SUCCESS"),
        new MessageButton()
            .setDisabled(disable ? true : false)
            .setCustomId("said-no")
            .setLabel("–ù–µ—Ç")
            .setStyle("DANGER")
    ]


    return new MessageActionRow().addComponents(buttons);
}
import { CURRENCY, GUILD_DESCRIPTION_MAX_LENGTH, GUILD_EMOJI, GUILD_HELPER_EMOJI, GUILD_LEADER_EMOJI, GUILD_MEMBERS_MAX_SIZE } from "../../config";
import { fetchGuild, getMemberGuild } from "../../database/db";
import { guilds, GuildSchema } from "../../database/models/guildSchema";
import client from "../../structures/Client";
import { DateTime } from "../../structures/DateAndTime";
import { Embed } from "../../structures/Embed";
import { MessageCommand } from "../../structures/MessageCommand";

export default new MessageCommand({
    name: "guild-info",
    aliases: ["guild", "gi"],
    description: "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥–∏–ª—å–¥–∏–∏",
    examples: ["{prefix}gi –¢–æ–ø—ã"],
    category: 2,
    cooldown: 2,
    run: async ({ msg, prefix, methods, args }) => {
        var guild = await getMemberGuild(msg.author.id) as GuildSchema;
        if (!args[0] && !guild) return methods.createError(msg, "–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–∏–ª—å–¥–∏–∏.", "guild-info").send();
        var name = guild?.name;
        if (args[0]) name = args.join(" ");
        const fetched = await fetchGuild(name, { members: true, helpers: true });
        guild = fetched.Guild
        if (!guild) return Embed(msg).setError(`–ì–∏–ª—å–¥–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: \`${prefix}top\``).send();
        // console.log(fetched.members);
        const voiceAll = Math.round(fetched.members.reduce((aggr, obj) => aggr + (obj.voice || 0), 0));

        

        const awards = guild.awards;

        let unions = await Promise.all((guild.union || []).map(async x => {
            const g = await guilds.findOne({id: x});
            if (g) return g.name;
        }))
        
        const union = unions.length > 0 ? unions.join(", ") : "–ù–µ—Ç—É";

        let wars = await Promise.all((guild.war || []).map(async x => {
            const g = await guilds.findOne({id: x});
            if (g) return g.name;
        }))
        
        const war = wars.length > 0 ? wars.join(", ") : "–ù–µ—Ç—É";
        
        const main = Embed(msg)
            .setAuthor({ name: `${GUILD_EMOJI} | ${guild.name}`})
            .setThumbnail(guild.logo)
            .setText(`–¢–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: \`${prefix}guild-top ${guild.name}\`\n–ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: \`${prefix}guild-voice ${guild.name}\`\n\n${fetched.Guild.description ? "> " + client.util.shorten(fetched.Guild.description, (GUILD_DESCRIPTION_MAX_LENGTH || 200)) : "> –û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç..."}`)
            .addField((GUILD_LEADER_EMOJI || "üí†") + " –í–ª–∞–¥–µ–ª–µ—Ü", `> ${msg.guild.members.cache.get(guild.leader as string) ? msg.guild.members.cache.get(guild.leader as string).user.tag : "–í—ã—à–µ–ª –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞"}`)
            .addField(`${GUILD_HELPER_EMOJI || "üî∂"} –ü–æ–º–æ—â–Ω–∏–∫–∏`, `> ${fetched.helpers.map(helper => msg.guild.members.cache.has(helper._id) ? msg.guild.members.cache.get(helper._id).user.tag : "–í—ã—à–µ–ª")?.join(", ") || "–ù–µ—Ç—É"}`)
            .addField("üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏", `> ${fetched.members.length} –∏–∑ ${guild.limit || GUILD_MEMBERS_MAX_SIZE || 500}`)
            .addField(`${CURRENCY.main} –í—Å–µ–≥–æ –æ–ø—ã—Ç–∞`, `> ${client.util.formatNumber(Math.round(fetched.members.reduce((aggr, obj) => aggr + (obj.points || 0), 0)))}`)
            .addField("üéô –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", `> ${DateTime.toStringWithZero(voiceAll)}`)
            .addField(`ü§ù –°–æ—é–∑–Ω–∏–∫–∏`, `> ${union}`)
            .addField(`‚öî –í—Ä–∞–≥–∏`, `> ${war}`)


        if (awards.length > 0) {
            let obj = {};
            const awardsTexted = []
            for (let i of awards) {
                if (obj[i]) {
                    obj[i]++
                } else {
                    obj[i] = 1
                }
            }

            for (let key in obj) {
                awardsTexted.push(`${key} \`x${obj[key]}\``);
            }

            main.addField("üèÜ –ù–∞–≥—Ä–∞–¥—ã", `> ${awardsTexted.join(" | ")}`)
        }

        if (guild.roles) {
            const validRoles = guild.roles.map(s => {
                const role = msg.guild.roles.cache.get(s);
                if (role) return role;
            });
            if (validRoles.length > 0) main.addField("üéó –†–æ–ª–∏", `> ${validRoles.join(", ")}`);
        }

        if (guild.guildRole) {
            const role = msg.guild.roles.cache.get(guild.guildRole);
            if (role) main.addField(`ü•è –†–æ–ª—å, –¥–æ–±–∞–≤–ª—è—é—â–∞—è –≤ —ç—Ç—É –≥–∏–ª—å–¥–∏—é`, `> ${role} = —É—á–∞—Å—Ç–Ω–∏–∫`)
        }
        
        if (guild.privacy) main.addField("üîí –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å", `> –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–æ –∑–∞—è–≤–∫–∞–º.\n> –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫ ‚Äî ${guild.requests.length}`);
        
        main.send();
    }
})